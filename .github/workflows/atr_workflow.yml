name: Automated Testing of the Repository workflow

on: [ push ]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push WEB to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./web/
          tags: ${{ secrets.DOCKER_USERNAME }}/atr-web:latest

      - name: Push DYNAMIC-TESTING to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./dynamic_tests/
          tags: ${{ secrets.DOCKER_USERNAME }}/atr-dynamic-testing:latest

      - name: Push STATIC-TESTING to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./static_tests/
          tags: ${{ secrets.DOCKER_USERNAME }}/atr-static-testing:latest

      - name: Push FRONTEND to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./frontend/
          tags: ${{ secrets.DOCKER_USERNAME }}/atr-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          stack_file_name: docker-compose.yaml
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/atr-web
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/atr-dynamic-testing
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/atr-static-testing
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/atr-frontend
            sudo docker-compose stop
            sudo docker-compose rm web
            sudo docker-compose rm dynamic-tests
            sudo docker-compose rm static-tests
            sudo docker-compose rm frontend
            touch .env
            echo DOMAIN=${{ secrets.DOMAIN }} >> .env
            echo SITE_NAME=${{ secrets.SITE_NAME }} >> .env
            echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
            echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d